name: Update CO₂ data (assets/co2.json)

on:
  schedule:
    - cron: "0 6 * * *"   # daily at 06:00 UTC
  workflow_dispatch: {}    # allow manual runs

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Fetch NOAA daily file
        run: |
          set -euo pipefail
          curl -sS https://gml.noaa.gov/webdata/ccgg/trends/co2/co2_daily_mlo.txt -o co2_daily_mlo.txt
          test -s co2_daily_mlo.txt || (echo "Download failed/empty" && exit 1)

      - name: Parse latest daily ppm + last update date (no tac)
        shell: bash
        run: |
          set -euo pipefail

          # Walk the file once, track the last valid numeric row.
          # Date = first 3 fields; PPM = last field (skip -999.99 / out-of-range).
          LATEST_LINE=$(awk '
            /^[[:space:]]*#/ { next }        # skip comments
            NF == 0        { next }          # skip blank lines
            {
              v = $NF
              if (v ~ /^-?[0-9]*\.?[0-9]+$/ && v+0 > 200 && v+0 < 700) {
                last=$0; lasty=$1; lastm=$2; lastd=$3; lastv=v
              }
            }
            END {
              if (lastv != "") {
                printf "%s %s %s %s\n", lasty, lastm, lastd, lastv
              }
            }
          ' co2_daily_mlo.txt)

          if [ -z "${LATEST_LINE}" ]; then
            echo "Could not find a valid data line" >&2
            tail -n 40 co2_daily_mlo.txt || true
            exit 1
          fi

          Y=$(echo "$LATEST_LINE" | awk '{print $1}')
          M=$(echo "$LATEST_LINE" | awk '{print $2}')
          D=$(echo "$LATEST_LINE" | awk '{print $3}')
          VAL=$(echo "$LATEST_LINE" | awk '{print $4}')

          M=$(printf "%02d" "$M")
          D=$(printf "%02d" "$D")
          ROW_DATE="$Y-$M-$D"
          PPM=$(awk -v v="$VAL" 'BEGIN { printf "%.2f", v }')

          # Parse "File Creation:" header to YYYY-MM-DD; fallback to row date
          HEADER=$(grep -m1 -i 'File Creation:' co2_daily_mlo.txt | sed 's/.*File Creation:\s*//I' || true)
          if date -u -d "$HEADER" +%Y-%m-%d >/dev/null 2>&1; then
            UPDATED=$(date -u -d "$HEADER" +%Y-%m-%d)
          else
            UPDATED="$ROW_DATE"
          fi

          echo "Parsed: ppm=$PPM, row_date=$ROW_DATE, last_updated=$UPDATED"

          mkdir -p assets
          cat > assets/co2.json <<JSON
          { "ppm": "$PPM", "date": "$ROW_DATE", "last_updated": "$UPDATED" }
          JSON

          echo "assets/:"
          ls -la assets

      - name: Commit assets/co2.json if changed
        shell: bash
        run: |
          set -euo pipefail
          if git status --porcelain assets/co2.json | grep .; then
            git config user.name "co2-bot"
            git config user.email "actions@users.noreply.github.com"
            git add assets/co2.json
            git commit -m "Update CO₂ data"
            git push
            echo "Committed and pushed assets/co2.json"
          else
            echo "No changes to commit."
          fi
