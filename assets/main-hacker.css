/** Hacker theme variables */
@import url("https://fonts.googleapis.com/css2?family=Source+Serif+4:ital,opsz,wght@0,8..60,200..900;1,8..60,200..900&display=swap");
:root { --base-color: #00ff00; --border: dashed 1px rgba(0, 255, 0, 0.9); --selection-background: rgba(0, 255, 0, 0.99); --selection-text: #000; --background-color: #000; --text-color: var(--base-color); --placeholder-color: var(--base-color); --link-color: #ff7a00; --code-color-1: #aaaaaa; --code-color-2: #ffffcc; --code-color-3: #F00000; --code-color-4: #F0A0A0; --code-color-5: #b38aff; --code-color-6: #5ba711; --code-color-7: #e4e477; --code-color-8: #000080; --code-color-9: #05ca05; --code-color-10: #888888; --code-color-11: #555555; --code-color-12: #800080; --code-color-13: #00d4d4; --code-color-14: #00c1c1; --code-color-15: #ed9d13; --code-color-16: #1e90ff; --code-color-17: #800000; --code-color-18: #bbbbbb; }

:root { --strong-color: #ff7a00; }

/* pick your orange */
strong, b { color: var(--strong-color); }

/* Make the nav a single flex row */
header .menu { width: 100%; }

header .menu .nav { display: flex; align-items: center; gap: 1rem; /* spacing between links */ list-style: none; margin: 0; padding: 0; /* Make sure links stay left if the theme tried to center them */ justify-content: flex-start; }

/* Push the toggle all the way to the right */
header .menu .nav .nav-toggle { margin-left: auto; }

/* Optional: compact the toggle look */
.theme-toggle { display: inline-flex; align-items: center; gap: .25rem; padding: .25rem .5rem; white-space: nowrap; }

.theme-toggle .sep { margin: 0; }

/* Small screens: allow wrapping; keep toggle at the end */
@media (max-width: 640px) { header .menu .nav { flex-wrap: wrap; }
  header .menu .nav .nav-toggle { order: 99; /* stays at the end when wrapping */ margin-left: auto; } }
/* (Optional) If your theme *forces* centering somewhere, this wins without !important */
header .menu .nav, header .menu .nav *:where(a, li) { text-align: left; }

/** Style variables */
/** Global */
body { background-color: var(--background-color); margin: 0 auto; padding: 0; padding-top: 25px; padding-bottom: 25px; font-family: "Source Serif 4", serif; font-size: 13px; color: var(--text-color); text-align: left; line-height: 1.5 !important; }

h1, h2, h3, h4, h5, h6 { font-size: 13px; margin: 0px; margin-top: 22px; font-weight: bold; color: var(--text-color); }

p, ul, ol { margin: 0px; color: var(--text-color); }

a { text-decoration: underline; color: var(--link-color); }

a:hover { color: var(--background-color); background-color: var(--base-color); }

@media only screen and (max-device-width: 500px) { * { font-size: 12px !important; } }
/** Layout */
.container { background-color: var(--extra-background-color); width: 90%; max-width: 600px; margin-right: auto; margin-left: auto; border: none; }

p { word-wrap: break-word; word-break: break-word; white-space: pre-wrap; margin-bottom: 10px; padding-left: 5px; padding-right: 5px; }

footer { color: var(--text-color); border-top: var(--border); margin: 20px auto 15px; text-align: right; width: calc(100% - 10px); }

header { margin-top: 25px; margin-bottom: 10px; padding-left: 5px; padding-right: 5px; padding-top: 5px; }

header p { text-align: left; margin: 5px; padding-left: 5px; }

/** Highlight/Markup */
::selection { background: var(--selection-background); color: var(--selection-text); }

::-moz-selection { background: var(--selection-background); color: var(--selection-text); }

/** Lists */
:not(.menu) > ul { list-style: none; padding-left: 5px; line-height: 2; }

:not(.menu) > ul { list-style-type: none; }

:not(.menu) > ul > li:before { content: none; margin-right: 9px; }

/** Header/Navigation */
.menu { border-top: var(--border); border-bottom: var(--border); margin-bottom: 25px; padding-left: 0; padding-right: 0; }

.menu ul { margin-top: 6px; margin-bottom: 6px; padding-left: 0px; padding-right: 5px; list-style-type: none; text-align: right; }

.menu ul li { display: inline; margin-left: 10px; }

.menu ul li a { text-decoration: none; color: var(--text-color); }

.menu ul li a:hover { text-decoration: none; color: var(--background-color); background-color: var(--base-color); }

form { display: flex; flex-direction: column; gap: 5px; /* Adjust the gap as needed */ }

label { margin-bottom: 5px; /* Add space between label and input */ padding-left: 5px; }

input { width: 95%; /* Adjust width to account for padding */ margin-bottom: 5px; /* Add space between each element */ margin-left: 5px; margin-right: 5px; }

button { width: 30%; /* Adjust width to account for padding */ margin-bottom: 5px; /* Add space between each element */ margin-left: 5px; margin-right: 5px; }

/** Code and syntax highlighting */
.lineno { color: var(--code-color-1); margin-right: 15px; }

figure.highlight { margin: 5px 0; }

pre { background-color: var(--background-color); border: none; padding: 0; margin: 0; overflow: auto; font-size: 13px; color: var(--text-color); line-height: 1.7 !important; font-family: "Source Serif 4", serif !important; }

.highlight .hll { background-color: var(--code-color-2); }

.highlight .c { color: var(--code-color-1); font-style: italic; }

/* Comment */
.highlight .err { color: var(--code-color-3); background-color: var(--code-color-4); }

/* Error */
.highlight .k { color: var(--code-color-5); }

/* Keyword */
.highlight .cm { color: var(--code-color-1); font-style: italic; }

/* Comment.Multiline */
.highlight .cp { color: var(--code-color-6); }

/* Comment.Preproc */
.highlight .c1 { color: var(--code-color-1); font-style: italic; }

/* Comment.Single */
.highlight .cs { color: var(--code-color-5); font-style: italic; }

/* Comment.Special */
.highlight .gd { color: var(--code-color-7); }

/* Generic.Deleted */
.highlight .ge { font-style: italic; }

/* Generic.Emph */
.highlight .gr { color: var(--code-color-7); }

/* Generic.Error */
.highlight .gh { color: var(--code-color-8); font-weight: bold; }

/* Generic.Heading */
.highlight .gi { color: var(--code-color-9); }

/* Generic.Inserted */
.highlight .go { color: var(--code-color-10); }

/* Generic.Output */
.highlight .gp { color: var(--code-color-11); }

/* Generic.Prompt */
.highlight .gs { font-weight: bold; }

/* Generic.Strong */
.highlight .gu { color: var(--code-color-12); font-weight: bold; }

/* Generic.Subheading */
.highlight .gt { color: var(--code-color-7); }

/* Generic.Traceback */
.highlight .kc { color: var(--code-color-5); }

/* Keyword.Constant */
.highlight .kd { color: var(--code-color-5); }

/* Keyword.Declaration */
.highlight .kn { color: var(--code-color-5); }

/* Keyword.Namespace */
.highlight .kp { color: var(--code-color-5); }

/* Keyword.Pseudo */
.highlight .kr { color: var(--code-color-5); }

/* Keyword.Reserved */
.highlight .kt { color: var(--code-color-13); }

/* Keyword.Type */
.highlight .m { color: var(--code-color-14); }

/* Literal.Number */
.highlight .s { color: var(--code-color-15); }

/* Literal.String */
.highlight .na { color: var(--code-color-16); }

/* Name.Attribute */
.highlight .nb { color: var(--code-color-13); }

/* Name.Builtin */
.highlight .nc { color: var(--code-color-9); text-decoration: underline; }

/* Name.Class */
.highlight .no { color: var(--code-color-7); }

/* Name.Constant */
.highlight .nd { color: var(--code-color-10); }

/* Name.Decorator */
.highlight .ni { color: var(--code-color-17); font-weight: bold; }

/* Name.Entity */
.highlight .nf { color: var(--code-color-9); }

/* Name.Function */
.highlight .nn { color: var(--code-color-13); text-decoration: underline; }

/* Name.Namespace */
.highlight .nt { color: var(--code-color-16); font-weight: bold; }

/* Name.Tag */
.highlight .nv { color: var(--code-color-7); }

/* Name.Variable */
.highlight .ow { color: var(--code-color-5); }

/* Operator.Word */
.highlight .w { color: var(--code-color-18); }

/* Text.Whitespace */
.highlight .mf { color: var(--code-color-14); }

/* Literal.Number.Float */
.highlight .mh { color: var(--code-color-14); }

/* Literal.Number.Hex */
.highlight .mi { color: var(--code-color-14); }

/* Literal.Number.Integer */
.highlight .mo { color: var(--code-color-14); }

/* Literal.Number.Oct */
.highlight .sb { color: var(--code-color-15); }

/* Literal.String.Backtick */
.highlight .sc { color: var(--code-color-15); }

/* Literal.String.Char */
.highlight .sd { color: var(--code-color-15); }

/* Literal.String.Doc */
.highlight .s2 { color: var(--code-color-15); }

/* Literal.String.Double */
.highlight .se { color: var(--code-color-15); }

/* Literal.String.Escape */
.highlight .sh { color: var(--code-color-15); }

/* Literal.String.Heredoc */
.highlight .si { color: var(--code-color-15); }

/* Literal.String.Interpol */
.highlight .sx { color: var(--code-color-15); }

/* Literal.String.Other */
.highlight .sr { color: var(--code-color-14); }

/* Literal.String.Regex */
.highlight .s1 { color: var(--code-color-15); }

/* Literal.String.Single */
.highlight .ss { color: var(--code-color-5); }

/* Literal.String.Symbol */
.highlight .bp { color: var(--code-color-13); }

/* Name.Builtin.Pseudo */
.highlight .vc { color: var(--code-color-7); }

/* Name.Variable.Class */
.highlight .vg { color: var(--code-color-7); }

/* Name.Variable.Global */
.highlight .vi { color: var(--code-color-7); }

/* Name.Variable.Instance */
.highlight .il { color: var(--code-color-14); }

/* Literal.Number.Integer.Long */
/* To center images */
.center { text-align: center; }

/* To left-align images */
.left { text-align: left; }

.footer-container { display: flex; justify-content: space-between; align-items: center; }

.copyright { flex-grow: 1; text-align: left; }

#datetime { text-align: right; }
